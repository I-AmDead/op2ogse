-- -*- mode: lua; coding: windows-1251-dos -*-
class "opt_sound" (CUIWindow)

function opt_sound:__init() super()
end

function opt_sound:__finalize()

end

function opt_sound:InitControls(x, y, xml, handler)

	self:Init(x,y, 738, 416)
	self:SetAutoDelete(true)
	
	self.bk = xml:InitFrame("frame", self)
	
--	local c

	xml:InitStatic("tab_sound:cap_mastervolume",		self)
	xml:InitStatic("tab_sound:cap_musicvolume",		self)
	xml:InitCheck("tab_sound:check_ambient",		self)

	xml:InitTrackBar("tab_sound:track_musicvolume",	self)
	xml:InitTrackBar("tab_sound:track_mastervolume",self)

	self.message_box = CUIMessageBoxEx()
	local need_restart_wnd = function()
		self.message_box:Init("message_box_restart_game")
		handler:GetHolder():start_stop_menu(self.message_box, true)
	end

	xml:InitStatic("tab_sound:cap_snd_device", self)
	local ctl = xml:InitComboBox("tab_sound:list_snd_device", self)
	handler:Register(ctl, "tab_sound:list_snd_device")
	handler:AddCallback( "tab_sound:list_snd_device", ui_events.LIST_ITEM_SELECT, need_restart_wnd )

--[=[
	ctl = xml:InitCheck("tab_sound:check_eax", self)
	handler:Register(ctl, "tab_sound:check_eax")
	handler:AddCallback( "tab_sound:check_eax", ui_events.BUTTON_CLICKED, need_restart_wnd )
--]=]
end

function opt_sound:RegisterCallback(obj, eventString, event, callback, that)
	that:Register(obj, eventString)
	that:AddCallback(eventString, event, callback, that)
end

--function opt_sound:HShow(b)
--	if b then
--		self:OShow(true)
--	else
--		self:OShow(false)
--	end	
--end

function opt_sound:OnClickHRTF()
	self = self.dlg_sound

	if self.hrtf:GetCheck() then
		self.crossfeed:SetCurrentID(false)
		get_console():execute("snd_crossfeed crsf_disable")
	end
end

function opt_sound:OnClickCrossfeed()
	self = self.dlg_sound
	
	if self.crossfeed:CurrentID() then
		self.hrtf:SetCheck(false)
	end
end
