-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "inv_drag_drop", fun = this.inv_drag_drop })
  -- sm:subscribe({ signal = "on_use", fun = this.on_use })
end


function on_use( obj, sobj )
  if not sobj then return end
  local sect = obj:section()
  if sect == "repair_item_weapon" or sect == "repair_item_outfit" then
    remkit_main.call_menu_repair_kit( obj )
    return true
  end
end


function inv_drag_drop( obj, me )
  local sect = obj:section()
  if
    not (
      (
        sect == "repair_item_weapon" and me:is_weapon_magazined()
        and dsh.is_weapon( me )
      )
      or ( sect == "repair_item_outfit" and me:is_outfit() )
    )
  then
    return
  end
  if me:condition() > 0.99 then
    ogse.autohiding_msg( "Ремонт не требуется", 1500 )
  elseif me:condition() < 0.2 then
    ogse.autohiding_msg( "Этот хлам уже не починить", 1500 )
  elseif me:condition() < 0.85 then
    ogse.autohiding_msg( "С таким уже к ремонтнику нужно обращаться", 1500 )
  else
    if me:condition() < 0.95 then
      level.start_stop_menu( repair_dialog( me, obj ), true )
    else
      dsh.exec_on_update(
        function()
          dsh_hud_fx.run_fx(
            sect, sect,
            {
              {
                [ "func" ] = function()
                  ogse.remove_item_from_inventory( obj )
                  dsh.set_condition( me, 1 )
                end,
              },
            },
            {
              [ "obj" ] = me,
            }
          )
        end
      )
    end
  end
  return true
end


class "repair_dialog" ( dsh_ui_simple_craft.ui_simple_craft )
function repair_dialog:__init( item, rem_obj )
  super( "ui_dsh_remkit.xml", item )
  self.rem_obj = rem_obj
end


function repair_dialog:can_include_into_list( item )
  return
    item:id() ~= self.item:id() and db.actor:is_in_ruck( item )
    and (
      (
        self.item:is_weapon_magazined()
        and item:is_weapon_magazined()
        and dsh.is_weapon( item )
      )
      or ( self.item:is_outfit() and item:is_outfit() )
    )
    and item:condition() > 0.3
    and not watcher_act.do_not_touch( item )
end


function repair_dialog:calc_shans_bar_height( item, destr_item )
  local bonus = ( item:section() == destr_item:section() ) and 100 or 0
  local shans = math.min( math.max( db.actor:character_rank(), 100 ), 700 )
  return ( shans + bonus ) / 10
end


function repair_dialog:do_craft( item )
  self:on_quit()
  local sect  = self.rem_obj:section()
  local shans = self:calc_shans_bar_height( self.item, item )
  dsh_hud_fx.run_fx(
    sect, sect,
    {
      {
        [ "func" ] = function()
          ogse.remove_item_from_inventory( item )
          ogse.remove_item_from_inventory( self.rem_obj )
          if shans < 100 then
            local rnd = dsh.get_next_random(
              "dsh_remkit.do_craft." .. self.rem_obj:section(), 100
            )
            if rnd > shans then
              dsh.say_blin()
              return
            end
          end
          self.item:set_condition(
            math.min( self.item:condition() + 0.1, 1 )
          )
        end,
      },
    },
    {
      [ "obj" ] = self.item,
    }
  )
end
