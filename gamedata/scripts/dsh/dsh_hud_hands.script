-- -*- mode: lua; coding: windows-1251-dos -*-

local act_prefix = "act\\"

-- эти текстуры заменяются в памяти при смене брони
local target_tex = {
  "act_arm_perchatka_cs",
  "act_arm_css",
}

-- эти текстуры используются при отсутствии брони, в свитере
local without_outfit = {
  "act_arm_perchatka_cs_nlc_0",
  "act_arm_css",
}


function attach( sm )
  sm:subscribe({ signal = "on_first_update", fun = this.on_first_update })
end

function on_first_update()
  local sm = ogse_signals.get_mgr()
  sm:subscribe({ signal = "on_drop",         fun = this.check_drop   })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.check_drop   })
  sm:subscribe({ signal = "on_item_to_slot", fun = this.check_outfit })
  reload_hand_textures()
end


function check_drop( obj )
  if alife():is_unloading() then return end
  if not obj:is_outfit() then return end
  reload_hand_textures()
end

function check_outfit( obj )
  reload_hand_textures()
end


local cur_tex = {}

function reload_hand_textures()
  local need_textures = without_outfit
  local outfit        = db.actor:get_current_outfit()
  if outfit then
    local t = parse_names(
      get_string( outfit:section(), "dsh_hud_hands", "" )
    )
    if table.getn( t ) < table.getn( target_tex ) then
      for i, n in ipairs( target_tex ) do
        if table.getn( t ) < i then table.insert( t, n ) end
      end
    end
    need_textures = t
  end

  for i, tex in ipairs( need_textures ) do
    if table.getn( cur_tex ) < i or cur_tex[ i ] ~= tex then
      local target = act_prefix .. target_tex[ i ]
      for _, suf in ipairs({ "", "_bump", "_bump#" }) do
        local tex_name = target .. suf
        local textures = texture_find( tex_name )
        local texture  = textures[ tex_name ]
        if texture then
          cur_tex[ i ] = tex
          local full_tex_name = act_prefix .. tex .. suf
          texture:load( full_tex_name )
        end
      end
    end
  end
end
