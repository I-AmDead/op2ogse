-- -*- mode: lua; coding: windows-1251-dos -*-

-- Обработка smart_terrain-ов или неписей, которых нужно убирать в оффлайн
-- принудительно, при удалении ГГ от них, и возращать в онлайн обратно,
-- при приближении к ним.

local switch_distances = {}
function load_switch_distances( sobj )
  local lname = object_level_name( sobj )
  if not switch_distances[ lname ] then
    local t = {}
    switch_distances[ lname ] = t
    local dsh_sect = "dsh.switch_distances." .. lname
    if sys_ini:section_exist( dsh_sect ) then
      for _, k in ipairs( get_section_keys( dsh_sect ) ) do
        t[ k ] = get_float( dsh_sect, k )
      end
    end
    if t.any then
      log2( "[%s]: set custom switch_distance: %s", script_name(), t.any )
      alife():set_switch_distance( t.any )
    end
  end
  return switch_distances[ lname ]
end


function get_switch_distance( sobj )
  local t = sobj.dsh_switch_distances__get_switch_distance
  if not t then
    t = {}
    sobj.dsh_switch_distances__get_switch_distance = t
    local level_switch_distances = load_switch_distances( sobj )
    local sd = level_switch_distances[ sobj:name() ]
    if ( not sd ) and IsStalker( sobj ) then
      sd = level_switch_distances[ sobj:profile_name() ]
    end
    if not sd then
      local strn_name = get_smart_terrain_name( sobj )
      if strn_name then
        sd = level_switch_distances[ strn_name ]
        if ( not sd ) and amk_offline_alife.is_actors_friend( sobj ) then
          sd = level_switch_distances.friends
        end
      end
    end
    if not sd then
      if IsMonster( sobj ) then
        sd = level_switch_distances.monster
      elseif IsStalker( sobj ) then
        sd = level_switch_distances.human
      end
    end
    if sd then t.sd = sd end
  end
  return t.sd
end


function se_can_switch_online( sobj )
  local sd = get_switch_distance( sobj )
  if sd and sd < alife():switch_distance() then
    if sobj.online then sd = sd + 20 end
    return sobj.position:distance_to( alife():actor().position ) <= sd
  end
end


local can_switch_offline = {}
function load_can_switch_offline( sobj )
  local lname = object_level_name( sobj )
  if not can_switch_offline[ lname ] then
    can_switch_offline[ lname ] = {}
    local suffixes = { "", ".opt" }
    for _, sfx in ipairs( suffixes ) do
      local dsh_sect = "dsh.can_switch_offline" .. sfx .. "." .. lname
      if sys_ini:section_exist( dsh_sect ) then
        for _, k in ipairs( get_section_keys( dsh_sect ) ) do
          can_switch_offline[ lname ][ k ] = get_bool( dsh_sect, k )
        end
      end
    end
  end
  return can_switch_offline[ lname ]
end


function se_can_switch_offline( sobj )
  local t = sobj.dsh_switch_distances__se_can_switch_offline
  if not t then
    t = {}
    sobj.dsh_switch_distances__se_can_switch_offline = t
    local level_can_switch_offline = load_can_switch_offline( sobj )
    local can = level_can_switch_offline[ sobj:name() ]
    if can == nil and IsStalker( sobj ) then
      can = level_can_switch_offline[ sobj:profile_name() ]
    end
    if can == nil then
      local strn_name = get_smart_terrain_name( sobj )
      if strn_name then
        can = level_can_switch_offline[ strn_name ]
        if can == nil and amk_offline_alife.is_actors_friend( sobj ) then
          can = level_can_switch_offline.friends
        end
      end
    end
    if can == nil then
      if IsMonster( sobj ) then
        can = level_can_switch_offline.monster
      elseif IsStalker( sobj ) then
        can = level_can_switch_offline.human
      end
    end
    if can ~= nil then t.can = can end
  end
  local sd = get_switch_distance( sobj )
  if sd then
    if sd > alife():switch_distance() then
      if sobj.online then sd = sd + 20 end
      return sobj.position:distance_to( alife():actor().position ) > sd
    end
  else
    if t.can == false then return false end
  end
end


function get_smart_terrain_name( sobj )
  local strn_id = dsh.is_free_logic_mob( sobj ) or sobj:smart_terrain_id()
  if strn_id ~= 65535 then
    local strn = alife():object( strn_id )
    if strn then
      return strn:name()
    end
  end
end


function reset_cache( sobj )
  sobj.dsh_switch_distances__get_switch_distance   = nil
  sobj.dsh_switch_distances__se_can_switch_offline = nil
end
