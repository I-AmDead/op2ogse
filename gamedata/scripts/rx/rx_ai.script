-- -*- mode: lua; coding: windows-1251-dos -*-
---- Rulix aka Bak --- 25.3.2009

--------------------------------------utils------------------------------------------

function printf(str,...)
        if not str then
                str = "((string is nil))"
        end
        log1(script_name()..string.format(str,...))
--      get_console():execute("flush")
end

function count_table(t)
        if type(t) ~= "table" then
                return
        end
        local cnt = 0
        for k,v in pairs(t) do
                cnt = cnt+1
        end
        return cnt
end

function get_storage(id,name)
        if not id then
                return
        end
        local st = db.storage[id]
        if not st then
                printf("get_storage:not npc storage!")
                return
        end
        if not st.rx_ai then
                st.rx_ai = {}
        end
        if not name then
                return st.rx_ai
        end
        if not st.rx_ai[name] then
                st.rx_ai[name] = {}
        end
        return st.rx_ai[name]
end

------------------------------------callbacks--------------------------------------
function actor_save(p)
        if rx_wmgr then
                rx_wmgr.return_all()
        end
        if rx_addons then
                rx_addons.actor_save()
        end
end

function npc_switch_offline(npc)
        unsubscribe_from_events(npc)
end

function npc_death(npc,who)
        if npc then
                issue_event(npc,"death_callback",who)
                unsubscribe_from_events(npc)
        end
end

function npc_hit(npc,amount,dir,who,bone_id)
        if npc and amount ~= 0 then
                issue_event(npc,"hit_callback",amount,dir,who,bone_id)
        end
end

function issue_event(npc,name,...)
if npc then
        local st = get_storage(npc:id(),"events")
        if not st then
                return
        end
--      printf("issue[%s]:%s",npc:name(),name)
        for k,v in pairs(st) do
                if v and k[name] then
                        k[name](k,...)
                end
        end
end
end

function subscribe_for_events(npc,obj)
        local st = get_storage(npc:id(),"events")
--      printf("subscribe[%s]",npc:name())
        st[obj] = true
end

function unsubscribe_from_events(npc,obj)
--      printf("unsubscribe[%s]",npc:name())
        local st = npc and get_storage(npc:id(),"events")
        if st then
                if obj then
                        st[obj] = nil
                else
                        st = nil
                end
        end
end

base_id = 18800

function load_schemes()
end

function disable_schemes(npc)
end

function enable_schemes(ini,npc)
end

function addCommonPrecondition(action)
end
