-- -*- mode: lua; coding: windows-1251-dos -*-
--\\Модуль*Батарейки Для оружия*..Меченый(Стрелок)..
--нафиг все переписано кроме невидимости by Monnoroch

function attach( sm )
  sm:subscribe({ signal = "on_drop",         fun = this.remove_wpn_m_134 })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.remove_wpn_m_134 })
  sm:subscribe({ signal = "on_item_to_slot", fun = this.use_wpn_m_134    })
end


function use_wpn_m_134( obj )
  if obj:section() == "wpn_m_134" then
    subscribe()
  end
end


function remove_wpn_m_134( obj )
  if obj:section() == "wpn_m_134" then
    local wpn = db.actor:item_in_slot( 2 )
    if wpn and wpn:section() == "wpn_m_134" then
      return
    end
    unsubscribe()
    on_actor_update()
  end
end


local signals
function subscribe()
  if not signals then
    signals = {
      { signal = "on_update", fun = this.on_update },
    }
    local sm = ogse_signals.get_mgr()
    for _, s in ipairs( signals ) do
      sm:subscribe( s )
    end
  end
end

function unsubscribe()
  if signals then
    local sm = ogse_signals.get_mgr()
    for _, s in ipairs( signals ) do
      sm:unsubscribe( s )
    end
    signals = nil
  end
end


function on_update()
  ogse_signals.get_mgr():reschedule( 1000 )
  on_actor_update()
end



local last_time
local full_charge = 700
local last_charge = full_charge
--\\Minigan


function on_actor_update()
  local wpn = db.actor:item_in_slot( 2 )
  if ( not wpn ) or not string.find( wpn:section(),"wpn_m_134" ) then
     -- если не сделать, то при взятии в руки минигана время использования
     -- аккумулятора будет считаться с момента его прошлого использования
    last_time = nil
    return
  end
  minigan_update( wpn )
end


function minigan_update(item)
	local have_accum = db.actor:object("acumm")
	if not have_accum and last_time then
		db.actor:move_to_ruck( item )
        amk.send_tip("Для использования оружия необходим аккумулятор.","Minigun",0,8,"gen_info")
		last_time = nil -- если не сделать, то при появлении в инвентаре нового аккумулятора, будет считаться что он использовался со времени разрядки последнего аккумулятора
		return
	end
	
	if not last_time then -- только-только одновременно имеется аккумулятор и миниган в руках
last_time = game.get_game_time()
return
end
	
local tm_diff = game.get_game_time():diffSec(last_time)
if tm_diff > 0 then
last_time = game.get_game_time()
		last_charge = last_charge - tm_diff * 0.1  
if last_charge <= 0 then
last_charge = full_charge
			meceniy_utils.delete_some_somth("acumm", 1)
end
end
end
