-- -*- mode: lua; coding: windows-1251-dos -*-

function npc_relacion( npc, actor )
  if db.actor and db.actor:id() == npc:id() then
    actor, npc = npc, actor
  end
  local npc_community = npc:character_community()
  local rel = npc:relation( actor )
  return rel == game_object.friend
end


function precond( npc, actor )
  if db.actor and db.actor:id() == npc:id() then
    actor, npc = npc, actor
  end
  local tname = "linspiro.havent_treasure_delayed"
  if ogse_st_mgr.timer_exists( tname ) then
    return false
  end
  return have_treasure( npc ) > get_lucky_num()
end


function get_lucky_num()
  local n = ogse.load_var_safe( "linspiro.lucky_num" )
  if not n then
    n = change_lucky_num()
  end
  return n
end


function change_lucky_num()
  local k = dsh_ogse_relations.has_enough_reputation()
  local n
  if k then
    local min = math.floor( 50 + 40 * ( 1 - k ) )
    n = math.random( min, 90 )
  else
    n = 90
  end
  ogse.save_var( "linspiro.lucky_num", n, "u8" )
  dsh.start_gtimerDHMS(
    "linspiro.change_lucky_num",
    0, math.random( 12, 20 ), 0, 0,
    "linspiro.change_lucky_num"
  )
  return n
end


function insert_custom_data( npc, actor )
  local actor_, npc_
  if db.actor and db.actor:id() == npc:id() then
    actor_ = npc
    npc_   = actor
  else
    actor_ = actor
    npc_   = npc
  end
  local binder = npc_:binded_object()
  local sect   = script_name()
  ASSERT(
    binder[ sect ],
    "binder.%s not found for %s", sect, npc_:name()
  )
  binder[ sect ].rnd = 0
  local sobj = alife():object( npc_:id() )
  if sobj then
    local ini = sobj:spawn_ini()
    ini.readonly = false
    ini:w_float( sect, "rnd", binder[ sect ].rnd )
    sobj:save_spawn_ini()
  end
  dsh.start_gtimerDHMS(
    "linspiro.havent_treasure_delayed",
    0, math.random( 3, 20 ), 0, 0,
    "linspiro.havent_treasure_delayed"
  )
end

function insert_custom_data_delayed() end
function havent_treasure_delayed() end


function actor_has_money_2()
  return dsh.actor_has_art_abs()
end

function give_money_2( t1, t2 )
  dsh.actor_give_art_abs()
end


function have_treasure( npc )
  local binder = npc:binded_object()
  local sect   = script_name()
  if not binder[ sect ] then
    local rnd  = 0
    local sobj = alife():object( npc:id() )
    if sobj then
      local ini = sobj:spawn_ini()
      if ini:section_exist( sect ) then
        rnd = get_float( sect, "rnd", nil, ini )
      else
        rnd = dsh.get_next_random( "linspiro.have_treasure.rnd", 100 )
        ini.readonly = false
        ini:w_float( sect, "rnd", rnd )
        sobj:save_spawn_ini()
      end
    end
    binder[ sect ] = {
      [ "rnd" ] = rnd,
    }
  end
  return binder[ sect ].rnd
end
